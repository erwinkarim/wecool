%h2 Direct to S3 Test

%form#fileupload(action="http://#{ENV['S3_BUCKET_NAME']}.s3.amazonaws.com" method="post" | 
  enctype="multipart/form-data")
  -# order is important!
  -# also, the things that are not filled in right now *will* be filled in soon.  See below.
  %input{:type => :hidden, :name => :key}
  %input{:type => :hidden, :name => "AWSAccessKeyId", :value => ENV['AWS_ACCESS_KEY_ID']}
  %input{:type => :hidden, :name => :acl,  :value => :private}
  %input{:type => :hidden, :name => :success_action_status, :value => "201"}
  %input{:type => :hidden, :name => :policy}
  %input{:type => :hidden, :name => :signature}
  .row-fluid.fileupload-buttonbar
    .span7
      %span.btn.btn-success.fileinput-button
        %i.icon-plus.icon-white
        %span Add files...
        %input{:type => :file, :name => :file}
      %button.btn.btn-primary.start( type="submit")
        %i.icon-upload.icon-white
        %span Start upload
      %button.btn.btn-warning.cancel
        %i.icon-ban-circle.icon-white
        %span Cancel Upload
    .span5
      .progress.progress-success.progress-striped.active.fade
        .bar( style="width:0%;")
  .fileupload-loading
  %br

  .fade.well#dropzone Drop Files here
  
  #table.table.table-striped#file-listing
    #tbody.files( data-toggle="modal-gallery" data-target="#modal-gallery")

%script#template-upload( type="text/x-tmpl" )
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  %tr.template-upload.fade( data-name="{%= file.name %}" )
    %td.preview
      %span.fade
    %td.name
      {%= file.name %}
    %td.size {%= o.formatFileSize(file.size) %}
    {% if (file.error) { %}
    %td.error(colspan="2")
      %span.label.label-important
        {%= locale.fileupload.error%}
    {% } else if (o.files.valid && !i) { %}
    %td
      .progress.progress-success.progress-striped.active
        .bar(sytle="width:0%;")
    %td.start
      %button.btn.btn-primary
        %i.icon-upload.icon-white
        %span
          {%= locale.fileupload.start %}
    {% } else { %}
    %td(colspan="2")
    {% } %}
    %td.cancel
      %button.btn.btn-warning
        %i.icon-ban-circle.icon-white
        %span
          {%= locale.fileupload.cancel %}
    %td.visibility
      %input.visible(type="checkbox" name="visible[]" value="false" style="display:none;")
      %button.visible_button.btn.btn-info(type="button")
        %i.icon-eye-open.icon-white
        %span Public
  {% } %}
    

%script#template-download( type="text/x-tmpl" )
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  %tr.template-download.fade
    {% if (file.error) { %}
    %td
    %td.name
      %span
        {%=file.name%}
    %td.size
      %span
        {%=o.formatFileSize(file.size) %}
    %td.error(colspan="2")
      %span.label.label-important
        {%=local.fileupload.error%}
      {%=local.fileupload.errors[file.error] || file.error %}
    {% } else { %}
    %td.preview
      {%if(file.thumbnail_url){ %}
      %img(src="{%= file.thumbnail_url %}")
      {% } %}
      %td.name
        {%= file.name %}
      %td.size
        %span
          {%=o.formatFileSize(file.size)%}
      %td
    {% } %}
    %td.clear-individual
      %a.btn.btn-warning( data-remote="true" date-method="post" rel="nofollow" href="/photos/{%=file.persona_screen_name %}/clear_from_queue/{%= file.photo_id %}" )
        %i.icon-eraser.icon-white
        %span Clear
    %td.delete
      %button.btn.btn-danger(data-type="{%= file.delete_type %}" data-url="{%= file.delete_url %}")
        %i.icon-trash.icon-white
        %span {%=locale.fileupload.destroy %}
      %input( type="checkbox" name="delete" value="1")
  {% } %}

<div class="row-fluid">
  <div class="span12">
    <%= nav_bar do %>
      <% menu_group do %>
				<%= drop_down '<i class="icon-save icon-4x"></i>'.html_safe do %>
					<%= menu_item 'Upload as a new photo', '#' %>
					<%= menu_item 'Replace current photo' ,'#' %>
				<% end %>
        <%= menu_item '<i class="icon-crop icon-4x"></i>'.html_safe , '#', :id => 'crop'  %>
        <%= menu_item '<i class="icon-rotate-left icon-4x"></i>'.html_safe , '#', :id => 'rotate-left' %>
        <%= menu_item '<i class="icon-rotate-right icon-4x"></i>'.html_safe, '#', :id => 'rotate-right' %>
        <%= drop_down '<i class="icon-sun icon-4x"></i>'.html_safe do %>
            <li style="padding:3px 20px;">
              <div class="row-fluid slider" id="brightness-slider" style="margin:10px 0px;"></div>
							<div class="row-fluid">
								<%= text_field_tag 'brightness-value', 0 , :disabled => true %>
							</div>
            </li>
        <% end %>
        <%= drop_down '<i class="icon-adjust icon-4x"></i>'.html_safe do %> 
          <li style="padding:3px 20px;">
            <div class="slider" id="contrast-slider" style="margin: 10px 0px;"></div>
						<div class="row-fluid">
							<%= text_field_tag 'contrast-value', 0 , :disabled => true %>
						</div>
            </li>
        <% end %>
      <% end %>
    <% end %>
  </div>
</div>
<div class="row-fluid" id="sub-menu" style="display:none;" >
  <%= nav_bar do %>
    <%= menu_group :id => 'corp-submenu', :style => 'display:none;' do %>
      <%= menu_item 'Done', '#', :id => 'crop-done' %>
      <%= menu_item 'Cancel', '#', :id => 'crop-cancel' %>
    <% end %>  
  <% end %>
</div>
<div class="row-fluid" id="canvas-area">
  <% img = ::Magick::Image::read(@photo.avatar.large.path).first %>
  <canvas id="canvas" class="span12 img-polaroid" height="<%= img.rows %>" width="<%= img.columns %>" style="max-width:none; width:<%= img.columns %>px;" >
  </canvas>
</div>
<script type="text/javascript">
  $(function(){

    //get canvas handle
    var canvas = document.getElementById('canvas');
    var ctx = canvas.getContext('2d');
    var origImageData, initData , imageDataDelta;

    //fill up the canvas w/ picture
    var img = new Image();
    img.src = '<%= @photo.avatar.large.url %>'; 
    img.onload = function(){
      ctx.drawImage(img, 0, 0);
      origImageData = ctx.getImageData(0,0, canvas.width, canvas.height);
			initData = new Array();
			for(i=0; i< origImageData.data.length; i++){
				initData.push(origImageData.data[i]);
			}
    };

    var jcrop_api, canvas_obj;
		function cancel_crop(){
			$('#crop').parent().removeClass('active');
			$('#sub-menu').css('display', 'none');  
			$('#crop-submenu').css('display', 'none');  
			jcrop_api.destroy();
			canvas_obj.attr('style', '');
			$('#canvas-area').append(canvas_obj);
		};

		function crop_picture(c){
		};

		function updateCoor(c){
			console.log('x: ' + c.x + ' y: ' + c.y + ' x2:' + c.x2  + ' y2:' + c.y2);
		};


    //toggle crop
    $('#crop').click( function(){
      $('#crop').parent().toggleClass('active');
      if ( $('#crop').parent().hasClass('active') ) {
        $('#sub-menu').css('display', 'block');  
        $('#crop-submenu').css('display', 'block');  
        jcrop_api = $.Jcrop('#canvas', { minSize:[150,150], allowSelect:false, setSelect:[0,0,150,150], onChange: updateCoor });
				canvas_obj = $('#canvas').first();
      } else {
				cancel_crop();
      }
    });

    
    //done cropping
    $('#crop-done').click( function(){
      //do something to crop the picture out

      //then remove the jcrop api
			cancel_crop();
    });

    //cancel cropping
    $('#crop-cancel').click( function(){
			cancel_crop();
    });

		//setup for rotate
		$('#rotate-left').click( function(){
		});

    //setup the sliders for brightness and contrast
    $('.slider').slider({ value:0, min:-128, max:128 });
    $('#brightness-slider').on('slide', function(event, ui){
			$('#brightness-value').val(ui.value);
			newData = Filters.filterImage( 
				Filters.brightnessAndContrast, document.getElementById('canvas'), 
				ui.value, $('#contrast-slider').slider('option', 'value') 
			);
			ctx.putImageData(newData, 0,0);
    } );

    $('#contrast-slider').on('slide', function(event, ui){
			$('#contrast-value').val(ui.value);
			newData = Filters.filterImage( 
				Filters.brightnessAndContrast, document.getElementById('canvas'), 
				$('#brightness-slider').slider('option', 'value'), ui.value
			);
			ctx.putImageData(newData, 0,0);
    } );

    // see http://www.html5rocks.com/en/tutorials/canvas/imagefilters/
    Filters = {};

		Filters.getPixels = function(){
			//return c.getContext('2d').getImageData(0,0, c.width, c.height);
			for( i=0; i<initData.length; i++){
				origImageData.data[i] = initData[i];
			}
			return origImageData;
		};

		Filters.filterImage = function(filter, var_args){
			var args = [Filters.getPixels()];
			for (var i=2; i < arguments.length; i++){
				args.push(arguments[i]);
			}
		
			return filter.apply(null, args);
		};

		//brightness and contrast filters
		Filters.brightnessAndContrast = function(pixels, brightnessAdjustment, contrastAdjustment){
			console.log('brightness: ' + brightnessAdjustment + ' contrast: ' + contrastAdjustment);
			var d = pixels.data;
			var contrastFactor = contrastAdjustment == 0 ? 1 : (259 * (contrastAdjustment + 255))/(255 * (259 - contrastAdjustment));
			for (var i =0; i < d.length; i+=4){
				d[i] = (contrastFactor * ( d[i] - 128 ) + 128) + brightnessAdjustment;
				d[i+1] = (contrastFactor * ( d[i+1] - 128 ) + 128) + brightnessAdjustment;
				d[i+2] = (contrastFactor * ( d[i+2] - 128 ) + 128) + brightnessAdjustment;
			}

			return pixels;
		}

		// adjustment is 'left' or 'right'
		Filters.rotate = function(pixels, adjustment){
			//get pixel data
			//rotate
			//redraw the canvas
			return pixels;
		}

	});
</script> 

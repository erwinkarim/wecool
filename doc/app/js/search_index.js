var search_data = {"index":{"searchIndex":["appmailer","applicationcontroller","applicationhelper","avataruploader","cart","coupon","devisehelper","follower","followerscontroller","followershelper","mediaset","mediasetphoto","mediasetscontroller","mediasetshelper","persona","personauploader","personascontroller","personashelper","photo","photoscontroller","photoshelper","sku","staticpagecontroller","staticpagehelper","storecontroller","storehelper","tagscontroller","tagshelper","tracker","trackerscontroller","trackershelper","welcomecontroller","welcomehelper","aboutus()","add_to_cart()","bandwidth_usage()","check_if_allowed_to_view()","check_if_allowed_to_visible()","check_if_reach_quota()","check_if_signed_in()","check_if_system_visible()","clear_from_upload_queue()","create()","create()","create()","crop()","destroy()","destroy()","destroy()","devise_error_messages!()","dl_test()","download()","edit()","edit()","edit()","editor()","editor_gen()","editor_upload_to_sys()","generate_code()","get_activity()","get_dimentions()","get_more()","get_more()","get_more()","get_more()","get_more()","get_photo_list()","get_picture()","get_single()","get_tags()","index()","index()","index()","index()","index()","init()","new()","new()","new()","not_viewable()","rebuild_original_after_transform()","redeem_coupon()","related()","require_login()","require_login()","reset_tags()","rotate()","rotate()","set_picture()","share()","share()","show()","show()","show()","show()","show()","show()","show_tag()","store_dir()","store_dir()","tags()","termsandconditions()","test_mail()","to_jq_upload()","toggle_featured()","toggle_featured()","toggle_visibility()","tour()","track()","track()","tracks()","transform()","untrack()","untrack()","unvote()","unvote()","update()","update()","update()","update_setlist()","update_setlist()","upgrade_acc()","upload()","user_for_paper_trail()","version()","view()","view()","view_exif()","vote()","vote()","readme_for_app"],"longSearchIndex":["appmailer","applicationcontroller","applicationhelper","avataruploader","cart","coupon","devisehelper","follower","followerscontroller","followershelper","mediaset","mediasetphoto","mediasetscontroller","mediasetshelper","persona","personauploader","personascontroller","personashelper","photo","photoscontroller","photoshelper","sku","staticpagecontroller","staticpagehelper","storecontroller","storehelper","tagscontroller","tagshelper","tracker","trackerscontroller","trackershelper","welcomecontroller","welcomehelper","staticpagecontroller#aboutus()","storecontroller#add_to_cart()","persona#bandwidth_usage()","photoscontroller#check_if_allowed_to_view()","photoscontroller#check_if_allowed_to_visible()","photoscontroller#check_if_reach_quota()","photoscontroller#check_if_signed_in()","mediasetscontroller#check_if_system_visible()","photoscontroller#clear_from_upload_queue()","mediasetscontroller#create()","personascontroller#create()","photoscontroller#create()","persona#crop()","mediasetscontroller#destroy()","personascontroller#destroy()","photoscontroller#destroy()","devisehelper#devise_error_messages!()","photoscontroller#dl_test()","photoscontroller#download()","mediasetscontroller#edit()","personascontroller#edit()","photoscontroller#edit()","photoscontroller#editor()","photoscontroller#editor_gen()","photoscontroller#editor_upload_to_sys()","coupon#generate_code()","persona#get_activity()","avataruploader#get_dimentions()","mediasetscontroller#get_more()","personascontroller#get_more()","photo::get_more()","photoscontroller#get_more()","tagscontroller#get_more()","photoshelper#get_photo_list()","personascontroller#get_picture()","photoscontroller#get_single()","photo::get_tags()","mediasetscontroller#index()","personascontroller#index()","photoscontroller#index()","tagscontroller#index()","welcomecontroller#index()","photo#init()","mediasetscontroller#new()","personascontroller#new()","photoscontroller#new()","photoscontroller#not_viewable()","photo#rebuild_original_after_transform()","storecontroller#redeem_coupon()","tagscontroller#related()","personascontroller#require_login()","storecontroller#require_login()","photo#reset_tags()","avataruploader#rotate()","photo#rotate()","personascontroller#set_picture()","appmailer#share()","photoscontroller#share()","followerscontroller#show()","mediasetscontroller#show()","personascontroller#show()","photoscontroller#show()","tagscontroller#show()","trackerscontroller#show()","personascontroller#show_tag()","avataruploader#store_dir()","personauploader#store_dir()","personascontroller#tags()","staticpagecontroller#termsandconditions()","appmailer#test_mail()","photo#to_jq_upload()","mediasetscontroller#toggle_featured()","photoscontroller#toggle_featured()","photoscontroller#toggle_visibility()","staticpagecontroller#tour()","followerscontroller#track()","trackerscontroller#track()","persona#tracks()","photoscontroller#transform()","followerscontroller#untrack()","trackerscontroller#untrack()","mediasetscontroller#unvote()","photoscontroller#unvote()","mediasetscontroller#update()","personascontroller#update()","photoscontroller#update()","photo#update_setlist()","photoscontroller#update_setlist()","personascontroller#upgrade_acc()","photoscontroller#upload()","applicationcontroller#user_for_paper_trail()","photoscontroller#version()","mediasetscontroller#view()","photoscontroller#view()","photoscontroller#view_exif()","mediasetscontroller#vote()","photoscontroller#vote()",""],"info":[["AppMailer","","AppMailer.html","","<p>class AppMailer &lt; ActionMailer::Base\n"],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["AvatarUploader","","AvatarUploader.html","",""],["Cart","","Cart.html","",""],["Coupon","","Coupon.html","",""],["DeviseHelper","","DeviseHelper.html","",""],["Follower","","Follower.html","",""],["FollowersController","","FollowersController.html","",""],["FollowersHelper","","FollowersHelper.html","",""],["Mediaset","","Mediaset.html","",""],["MediasetPhoto","","MediasetPhoto.html","",""],["MediasetsController","","MediasetsController.html","",""],["MediasetsHelper","","MediasetsHelper.html","",""],["Persona","","Persona.html","",""],["PersonaUploader","","PersonaUploader.html","",""],["PersonasController","","PersonasController.html","",""],["PersonasHelper","","PersonasHelper.html","",""],["Photo","","Photo.html","",""],["PhotosController","","PhotosController.html","",""],["PhotosHelper","","PhotosHelper.html","",""],["Sku","","Sku.html","","<p>sku to store the unit description and codes\n\n<pre>model is which table that will reference to\n and will be accessed ...</pre>\n"],["StaticPageController","","StaticPageController.html","",""],["StaticPageHelper","","StaticPageHelper.html","",""],["StoreController","","StoreController.html","",""],["StoreHelper","","StoreHelper.html","",""],["TagsController","","TagsController.html","",""],["TagsHelper","","TagsHelper.html","",""],["Tracker","","Tracker.html","",""],["TrackersController","","TrackersController.html","",""],["TrackersHelper","","TrackersHelper.html","",""],["WelcomeController","","WelcomeController.html","",""],["WelcomeHelper","","WelcomeHelper.html","",""],["aboutUs","StaticPageController","StaticPageController.html#method-i-aboutUs","()",""],["add_to_cart","StoreController","StoreController.html#method-i-add_to_cart","()","<p>add items to cart\n\n<pre>POST   /store/:persona_id/add_to_cart(.:format)</pre>\n"],["bandwidth_usage","Persona","Persona.html#method-i-bandwidth_usage","()","<p>calculate bandwith usage for the current calender month (ie; 1st to current\nday)\n"],["check_if_allowed_to_view","PhotosController","PhotosController.html#method-i-check_if_allowed_to_view","()",""],["check_if_allowed_to_visible","PhotosController","PhotosController.html#method-i-check_if_allowed_to_visible","()",""],["check_if_reach_quota","PhotosController","PhotosController.html#method-i-check_if_reach_quota","()","<p>every time upload, check if can send photos\n"],["check_if_signed_in","PhotosController","PhotosController.html#method-i-check_if_signed_in","()",""],["check_if_system_visible","MediasetsController","MediasetsController.html#method-i-check_if_system_visible","()","<p>check if the mediaset is viewable\n"],["clear_from_upload_queue","PhotosController","PhotosController.html#method-i-clear_from_upload_queue","()","<p>POST   /photos/:persona_id/clear_from_queue/:photo_id clear from the queue\nin :new action\n"],["create","MediasetsController","MediasetsController.html#method-i-create","()","<p>POST /mediasets POST /mediasets.json\n"],["create","PersonasController","PersonasController.html#method-i-create","()","<p>POST /personas POST /personas.json\n"],["create","PhotosController","PhotosController.html#method-i-create","()","<p>POST /photos POST /photos.json\n"],["crop","Persona","Persona.html#method-i-crop","( x_coor, y_coor, h_coor, w_coor )",""],["destroy","MediasetsController","MediasetsController.html#method-i-destroy","()","<p>DELETE /mediasets/1 DELETE /mediasets/1.json\n"],["destroy","PersonasController","PersonasController.html#method-i-destroy","()","<p>DELETE /personas/1 DELETE /personas/1.json\n"],["destroy","PhotosController","PhotosController.html#method-i-destroy","()","<p>DELETE /photos/1 DELETE /photos/1.json\n"],["devise_error_messages!","DeviseHelper","DeviseHelper.html#method-i-devise_error_messages-21","()",""],["dl_test","PhotosController","PhotosController.html#method-i-dl_test","()","<p>GET    /photos/:persona_id/dl_test\n"],["download","PhotosController","PhotosController.html#method-i-download","()","<p>POST   /photos/:persona_id/download/:id( download pictures\n"],["edit","MediasetsController","MediasetsController.html#method-i-edit","()","<p>GET /mediasets/1/edit GET /mediasets/:persona_id/edit/:id(.:format)\n"],["edit","PersonasController","PersonasController.html#method-i-edit","()","<p>GET /personas/1/edit\n"],["edit","PhotosController","PhotosController.html#method-i-edit","()","<p>GET /photos/1/edit\n"],["editor","PhotosController","PhotosController.html#method-i-editor","()","<p>GET    /photos/:persona_id/editor/:photo_id(.:format)\n"],["editor_gen","PhotosController","PhotosController.html#method-i-editor_gen","()","\n<pre>POST   /photos/:persona_id/editor/:photo_id/generate\n generate the photo from canvas.toDataPath in jpg ...</pre>\n"],["editor_upload_to_sys","PhotosController","PhotosController.html#method-i-editor_upload_to_sys","()","<p>POST   /photos/:persona_id/editor/:photo_id/upload_to_sys upload canvas\ndata to the system (generate …\n"],["generate_code","Coupon","Coupon.html#method-i-generate_code","()","<p>generate the codes before validation\n"],["get_activity","Persona","Persona.html#method-i-get_activity","(new_options = {})","<p>gather activity of this persona\n"],["get_dimentions","AvatarUploader","AvatarUploader.html#method-i-get_dimentions","()",""],["get_more","MediasetsController","MediasetsController.html#method-i-get_more","()","<p>get more mediasets from last_id GET    /mediasets/get_more/:last_id\n"],["get_more","PersonasController","PersonasController.html#method-i-get_more","()","<p>GET    /personas/get_more/:last_id get more persona listings, in desending\norder with upper bound is …\n"],["get_more","Photo","Photo.html#method-c-get_more","( last_id, options={}, current_persona={ :signed_in? => false, :current_persona => nil } )","<p>fetch photos from last_id reference point, options can be modified in the\nsecond arguments, otherwise …\n"],["get_more","PhotosController","PhotosController.html#method-i-get_more","()","<p>todo: get more on trendiness and the ones that you tracked GET   \n/photos/get_more/:last_id\n"],["get_more","TagsController","TagsController.html#method-i-get_more","()","<p>GET    /tags/get_more(.:format)\n"],["get_photo_list","PhotosHelper","PhotosHelper.html#method-i-get_photo_list","(personaID, atPhotoID, mediasetID, isFeatured = [true, false])",""],["get_picture","PersonasController","PersonasController.html#method-i-get_picture","()","<p>GET   /personas/:persona_id/picture\n"],["get_single","PhotosController","PhotosController.html#method-i-get_single","()","<p>GET    /photos/:persona_id/get_single/:photo_id(.:format)\n"],["get_tags","Photo","Photo.html#method-c-get_tags","( options = {} )",""],["index","MediasetsController","MediasetsController.html#method-i-index","()","<p>GET /mediasets GET /mediasets.json\n"],["index","PersonasController","PersonasController.html#method-i-index","()","<p>GET /personas GET /personas.json\n"],["index","PhotosController","PhotosController.html#method-i-index","()","<p>GET /photos GET /photos.json\n"],["index","TagsController","TagsController.html#method-i-index","()",""],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["init","Photo","Photo.html#method-i-init","(params={})",""],["new","MediasetsController","MediasetsController.html#method-i-new","()","<p>GET /mediasets/new GET /mediasets/new.json\n"],["new","PersonasController","PersonasController.html#method-i-new","()","<p>GET /personas/new GET /personas/new.json\n"],["new","PhotosController","PhotosController.html#method-i-new","()","<p>GET /photos/new GET /photos/new.json\n"],["not_viewable","PhotosController","PhotosController.html#method-i-not_viewable","()","<p>GET    /photos/:persona_id/not_viewable(.:format) tells the user that the\nphoto is not viewable because …\n"],["rebuild_original_after_transform","Photo","Photo.html#method-i-rebuild_original_after_transform","( command, options={})",""],["redeem_coupon","StoreController","StoreController.html#method-i-redeem_coupon","()","<p>redeem coupons that is purchased else where\n\n<pre>POST   /store/:persona_id/redeem_coupon(.:format)</pre>\n"],["related","TagsController","TagsController.html#method-i-related","()","<p>get and show related photos\n\n<pre>GET    /tags/related/:photo_id</pre>\n"],["require_login","PersonasController","PersonasController.html#method-i-require_login","()",""],["require_login","StoreController","StoreController.html#method-i-require_login","()","<p>ensure that the users are logging in before accessing the store\n"],["reset_tags","Photo","Photo.html#method-i-reset_tags","()","<p>rebuilt the tag list. useful when you update the title/description\n\n<pre>and need to know what's tag that are ...</pre>\n"],["rotate","AvatarUploader","AvatarUploader.html#method-i-rotate","(direction)",""],["rotate","Photo","Photo.html#method-i-rotate","(degree, version = 'all')",""],["set_picture","PersonasController","PersonasController.html#method-i-set_picture","()","<p>POST   /personas/:persona_id/picture supplies varabiles:–\n\n<pre>x_coor, y_coor, h_coor, w_coor : dimensions ...</pre>\n"],["share","AppMailer","AppMailer.html#method-i-share","(options={})",""],["share","PhotosController","PhotosController.html#method-i-share","()","\n<pre>POST   /photos/:persona_id/share</pre>\n<p>required parameters in params:-\n\n<pre>:url          the url that will be shared ...</pre>\n"],["show","FollowersController","FollowersController.html#method-i-show","()","<p>GET    /followers/:persona_id(.:format)\n"],["show","MediasetsController","MediasetsController.html#method-i-show","()","<p>GET /mediasets/persona_id GET /mediasets/persona_id.json\n"],["show","PersonasController","PersonasController.html#method-i-show","()","<p>GET /personas/1 GET /personas/1.json\n"],["show","PhotosController","PhotosController.html#method-i-show","()","<p>GET /photos/:persona_id GET /photos/:persona_id.json\n"],["show","TagsController","TagsController.html#method-i-show","()","<p>GET    /tags/:tag_id\n"],["show","TrackersController","TrackersController.html#method-i-show","()","<p>GET    /trackers/:persona_id(.:format)\n"],["show_tag","PersonasController","PersonasController.html#method-i-show_tag","()","<p>GET    /personas/:persona_id/tags/:tag_id(.:format)\n\n<pre>show photos from :persona_id that has :tag_id</pre>\n"],["store_dir","AvatarUploader","AvatarUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["store_dir","PersonaUploader","PersonaUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["tags","PersonasController","PersonasController.html#method-i-tags","()","<p>GET    /personas/:persona_id/tags(.:format)\n"],["termsAndConditions","StaticPageController","StaticPageController.html#method-i-termsAndConditions","()",""],["test_mail","AppMailer","AppMailer.html#method-i-test_mail","(persona)",""],["to_jq_upload","Photo","Photo.html#method-i-to_jq_upload","()",""],["toggle_featured","MediasetsController","MediasetsController.html#method-i-toggle_featured","()","<p>POST   /mediasets/toggle_featured/:mediaset_id\n"],["toggle_featured","PhotosController","PhotosController.html#method-i-toggle_featured","()","<p>POST   /photos/:persona_id/toggle_featured/:photo_id\n"],["toggle_visibility","PhotosController","PhotosController.html#method-i-toggle_visibility","()","<p>POST   /photos/:persona_id/toggle_visibility/:photo_id\n"],["tour","StaticPageController","StaticPageController.html#method-i-tour","()",""],["track","FollowersController","FollowersController.html#method-i-track","()","<p>POST   /followers/track/:object_type/:object_id\n"],["track","TrackersController","TrackersController.html#method-i-track","()","<p>POST   /trackers/track/:object_type/:object_id\n"],["tracks","Persona","Persona.html#method-i-tracks","( object_type, object_id)",""],["transform","PhotosController","PhotosController.html#method-i-transform","()","<p>POST\n/photos/:persona_id/transform/:photo_id/:method?arg1=val1&amp;arg2=val2.…argn=valn\n"],["untrack","FollowersController","FollowersController.html#method-i-untrack","()","<p>POST   /followers/untrack/:object_type/:object_id\n"],["untrack","TrackersController","TrackersController.html#method-i-untrack","()","<p>POST   /trackers/untrack/:object_type/:object_id\n"],["unvote","MediasetsController","MediasetsController.html#method-i-unvote","()","<p>POST   /mediasets/unvote/:mediaset_id/by/:persona_id\n"],["unvote","PhotosController","PhotosController.html#method-i-unvote","()","<p>POST   /photos/unvote/:photo_id/by/:persona_id(.:format)\n"],["update","MediasetsController","MediasetsController.html#method-i-update","()","<p>PUT /mediasets/1 PUT /mediasets/1.json params[:photo] holds photolist in\norder\n"],["update","PersonasController","PersonasController.html#method-i-update","()","<p>PUT /personas/1 PUT /personas/1.json\n"],["update","PhotosController","PhotosController.html#method-i-update","()","<p>PUT /photos/1 PUT /photos/1.json\n"],["update_setlist","Photo","Photo.html#method-i-update_setlist","(newSetlist = Array.new)","<p>update what photos that this mediaset belongs\n"],["update_setlist","PhotosController","PhotosController.html#method-i-update_setlist","()","<p>POST   /photos/:persona_id/update_setlist/:photo_id(.:format)\n"],["upgrade_acc","PersonasController","PersonasController.html#method-i-upgrade_acc","()","<p>GET /personas/:persona_id/upgrade_to_premium(.:format)\n"],["upload","PhotosController","PhotosController.html#method-i-upload","()","<p>GET    /photos/:photo_id/upload\n"],["user_for_paper_trail","ApplicationController","ApplicationController.html#method-i-user_for_paper_trail","()",""],["version","PhotosController","PhotosController.html#method-i-version","()","<p>VERB /photos/:persona_id/versions/:photo_id\n"],["view","MediasetsController","MediasetsController.html#method-i-view","()","<p>GET    /mediasets/:persona_id/view/:id(.:format)\n"],["view","PhotosController","PhotosController.html#method-i-view","()","<p>GET    /photos/:persona_id/view/:id(.:format)\n"],["view_exif","PhotosController","PhotosController.html#method-i-view_exif","()","<p>GET /photos/:persona_id/view/:id/exif(.:format)\n"],["vote","MediasetsController","MediasetsController.html#method-i-vote","()","<p>POST   /mediasets/vote/:mediaset_id/:vote_mode/by/:persona_id\n"],["vote","PhotosController","PhotosController.html#method-i-vote","()","<p>POST   /photos/vote/:photo_id/:vote_mode/by/:persona_id(.:format)\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}